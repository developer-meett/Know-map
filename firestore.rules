rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && (
        request.auth.token.admin == true ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true
      );
    }
    
    // Users collection rules
    match /users/{userId} {
      // Users can read their own document
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Users can create their own document during signup
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Users can update their own document, but NOT the isAdmin field
      allow update: if request.auth != null 
        && request.auth.uid == userId
        && !('isAdmin' in request.resource.data.diff(resource.data).affectedKeys());
      
      // Only admins can update the isAdmin field or update any user document
      allow update: if isAdmin();
      
      // Only admins can delete user documents
      allow delete: if isAdmin();
      
      // Admins can read all user documents
      allow read: if isAdmin();
    }
    
    // Quizzes collection rules
    match /quizzes/{quizId} {
      // All authenticated users can read quizzes
      allow read: if request.auth != null;
      
      // Only admins can write (create, update, delete) quizzes
      allow write: if isAdmin();
      
      // Questions subcollection rules
      match /questions/{questionId} {
        // All authenticated users can read questions
        allow read: if request.auth != null;
        
        // Only admins can write (create, update, delete) questions
        allow write: if isAdmin();
      }
    }
    
    // Quiz results collection rules
    match /quiz-results/{resultId} {
      // Users can read their own quiz results
      allow read: if request.auth != null 
        && request.auth.uid == resource.data.userId;
      
      // Users can create their own quiz results
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.userId;
      
      // Admins can read all quiz results
      allow read: if request.auth != null 
        && request.auth.token.admin == true;
      
      // Admins can delete quiz results
      allow delete: if request.auth != null 
        && request.auth.token.admin == true;
    }
    
    // Deny all other operations by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
